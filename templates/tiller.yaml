{{ $values := .Values}}

{{ range $index, $project := .Values.projects }}

# Tiller-secret
apiVersion: v1
kind: Secret
metadata:
  labels:
    app: helm
    name: tiller
  name: tiller-secret
  namespace: {{ $project.name }}
data:
  ca.crt: {{ $values.tiller.ca_crt  }}
  tls.crt: {{ $values.tiller.server_crt  }}
  tls.key: {{ $values.tiller.server_key  }}
type: Opaque

---
# Service account
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app: helm
    name: tiller
  name: tiller-sa
  namespace: {{ $project.name }}

---

# Role Binding
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app: helm
    name: {{ $project.name }}-tiller
  name: tiller
  namespace: {{ $project.name }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-admin
subjects:
- kind: ServiceAccount
  name: tiller-sa
  namespace: {{ $project.name }}
---

  {{ range $index, $ns := $project.namespaces }}
# Role Binding
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app: helm
    name: {{ $project.name }}-{{ $ns }}-tiller
  name: tiller
  namespace: {{ $project.name }}-{{ $ns }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-admin
subjects:
- kind: ServiceAccount
  name: tiller-sa
  namespace: {{ $project.name }}
---
  {{- end -}}

# Service
apiVersion: v1
kind: Service
metadata:
  labels:
    app: helm
    name: tiller
  name: tiller
  namespace: {{ $project.name }}
spec:
  ports:
  - name: tiller
    port: 44134
    protocol: TCP
    targetPort: tiller
  selector:
    app: helm
    name: tiller

---
# Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: helm
    name: tiller
  name: tiller
  namespace: {{ $project.name }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: helm
      name: tiller
  template:
    metadata:
      labels:
        app: helm
        name: tiller
    spec:
      containers:
      - env:
        - name: TILLER_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: TILLER_HISTORY_MAX
          value: "0"
        - name: TILLER_TLS_VERIFY
          value: "1"
        - name: TILLER_TLS_ENABLE
          value: "1"
        - name: TILLER_TLS_CERTS
          value: /etc/certs
        image: {{ printf "%v:%v" $values.tiller.image $values.tiller.imagetag }}
        imagePullPolicy: IfNotPresent
        name: tiller
        ports:
        - containerPort: 44134
          name: tiller
          protocol: TCP
        - containerPort: 44135
          name: http
          protocol: TCP
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /liveness
            port: 44135
            scheme: HTTP
          initialDelaySeconds: 1
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /readiness
            port: 44135
            scheme: HTTP
          initialDelaySeconds: 1
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        resources:
          limits:
            cpu: 100m
            memory: 100Mi
          requests:
            cpu: 50m
            memory: 50Mi
        volumeMounts:
        - mountPath: /etc/certs
          name: tiller-certs
          readOnly: true
      dnsPolicy: ClusterFirst
      volumes:
      - name: tiller-certs
        secret:
          defaultMode: 420
          secretName: tiller-secret
      serviceAccountName: tiller-sa
---
{{- end -}}